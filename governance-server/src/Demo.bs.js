// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Http = require("bs-node-http/src/Http.js");
var Json = require("@glennsl/bs-json/src/Json.bs.js");
var Http$1 = require("http");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");

function string_of_stage(s) {
  switch (s) {
    case 0 : 
        return "proposed";
    case 1 : 
        return "aborted";
    case 2 : 
        return "grace";
    case 3 : 
        return "rejected";
    case 4 : 
        return "accepted";
    
  }
}

function string_of_type(t) {
  switch (t) {
    case 0 : 
        return "membership";
    case 1 : 
        return "grant";
    case 2 : 
        return "contract";
    
  }
}

function encode_proposal(p) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "champion",
                p[/* champion */0]
              ],
              /* :: */[
                /* tuple */[
                  "stage",
                  string_of_stage(p[/* stage */1])
                ],
                /* :: */[
                  /* tuple */[
                    "title",
                    p[/* title */2]
                  ],
                  /* :: */[
                    /* tuple */[
                      "type",
                      string_of_type(p[/* type_ */3])
                    ],
                    /* [] */0
                  ]
                ]
              ]
            ]);
}

var proposals = /* :: */[
  /* record */[
    /* champion */"xla",
    /* stage : Accepted */4,
    /* title */"Add Rudolfs to product team",
    /* type_ : Membership */0
  ],
  /* :: */[
    /* record */[
      /* champion */"julien",
      /* stage : Proposed */0,
      /* title */"Develop design system for all apps",
      /* type_ : Grant */1
    ],
    /* :: */[
      /* record */[
        /* champion */"Abbey",
        /* stage : Rejected */3,
        /* title */"Change payouts to bi-weekly",
        /* type_ : Contract */2
      ],
      /* [] */0
    ]
  ]
];

var server = Http$1.createServer((function (request, response) {
        Http.ClientRequest[/* getMethod */0](request);
        Pervasives.print_string("GOT REQUEST\n");
        var payload = Json_encode.list(encode_proposal, proposals);
        var partial_arg = Json.stringify(payload);
        var partial_arg$1 = Http.ServerResponse[/* write */4];
        (function (eta) {
                var param = undefined;
                var param$1 = eta;
                return partial_arg$1(partial_arg, param, param$1);
              })(Http.ServerResponse[/* setHeader */1]("content-type", "application/json", Http.ServerResponse[/* setHeader */1]("Access-Control-Allow-Origin", "*", Http.ServerResponse[/* setStatusCode */2](200, response)))).end();
        return /* () */0;
      }));

server.listen(3000);

exports.string_of_stage = string_of_stage;
exports.string_of_type = string_of_type;
exports.encode_proposal = encode_proposal;
exports.proposals = proposals;
exports.server = server;
/* server Not a pure module */
